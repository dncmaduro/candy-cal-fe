# --- Build stage ---
FROM node:20-alpine AS builder
WORKDIR /app

COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

COPY . .
# Nhận tất cả build-args bắt đầu bằng VITE_ (ta sẽ truyền từ .env.staging khi build)
ARG VITE_BACKEND_URL
ENV VITE_BACKEND_URL=${VITE_BACKEND_URL}
ARG VITE_ENV
ENV VITE_ENV=${VITE_ENV}
ARG VITE_WEB_SOCKET_URL
ENV VITE_WEB_SOCKET_URL=${VITE_WEB_SOCKET_URL}
ARG VITE_CLOUDINARY_API_KEY
ENV VITE_CLOUDINARY_API_KEY=${VITE_CLOUDINARY_API_KEY}
ARG VITE_CLOUDINARY_UPLOAD_PRESET
ENV VITE_CLOUDINARY_UPLOAD_PRESET=${VITE_CLOUDINARY_UPLOAD_PRESET}
ARG VITE_CLOUDINARY_CLOUD_NAME
ENV VITE_CLOUDINARY_CLOUD_NAME=${VITE_CLOUDINARY_CLOUD_NAME}
# Nếu có thêm VITE_* khác, cứ lặp lại ARG...ENV tương tự hoặc dùng mẹo truyền hàng loạt ở lệnh build
RUN yarn build

# --- Runtime stage ---
FROM nginx:1.27-alpine
# Nginx config cho SPA (history fallback)
COPY nginx.vite.conf /etc/nginx/conf.d/default.conf

# Copy artifact
COPY --from=builder /app/dist /usr/share/nginx/html

EXPOSE 8386
HEALTHCHECK --interval=30s --timeout=3s CMD wget -qO- http://127.0.0.1:8386/ >/dev/null 2>&1 || exit 1
